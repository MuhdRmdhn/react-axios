{"ast":null,"code":"var _jsxFileName = \"/Users/muhammadramadhanrahmat/Desktop/SCTP/React/6m-software-2.9-react-axios/code/final/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport mockAPI from './api/mockapi';\nimport Table from './components/Table';\nimport AreaForecast from './components/AreaForecast';\nimport styles from './components/Button.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [forecasts, setForecasts] = useState([]);\n  const [areaForecast, setAreaForecast] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(\"\");\n  const apiGetAll = async () => {\n    setLoading(true);\n    try {\n      const response = await mockAPI.get('/four-day-outlook');\n      setForecasts(response.data.items[0].forecasts);\n    } catch (error) {\n      setError(\"Failed to fetch data\");\n    } finally {\n      setLoading(false);\n    }\n  };\n  const apiGet = async area => {\n    setLoading(true);\n    try {\n      const response = await mockAPI.get('/four-day-outlook');\n      const forecast = response.data.items[0].forecasts.find(item => item.area === area);\n      if (forecast) {\n        setAreaForecast(`The forecast in ${area} is ${forecast.forecast}`);\n      } else {\n        setAreaForecast(`There is no forecast for ${area}!`);\n      }\n    } catch (error) {\n      setAreaForecast(`Error fetching forecast for ${area}`);\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(AreaForecast, {\n      getForecast: apiGet,\n      areaForecast: areaForecast\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: styles.button,\n      onClick: apiGetAll,\n      children: \"Load all weather forecasts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 19\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(Table, {\n      list: forecasts\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"6Ov25jtkpt7A/5A9rIK4hTYZuDQ=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","mockAPI","Table","AreaForecast","styles","jsxDEV","_jsxDEV","App","_s","forecasts","setForecasts","areaForecast","setAreaForecast","loading","setLoading","error","setError","apiGetAll","response","get","data","items","apiGet","area","forecast","find","item","className","children","getForecast","fileName","_jsxFileName","lineNumber","columnNumber","button","onClick","list","_c","$RefreshReg$"],"sources":["/Users/muhammadramadhanrahmat/Desktop/SCTP/React/6m-software-2.9-react-axios/code/final/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport mockAPI from './api/mockapi';\nimport Table from './components/Table';\nimport AreaForecast from './components/AreaForecast';\nimport styles from './components/Button.module.css';\n\nfunction App() {\n  const [forecasts, setForecasts] = useState([]);\n  const [areaForecast, setAreaForecast] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(\"\");\n\n  const apiGetAll = async () => {\n    setLoading(true);\n    try {\n      const response = await mockAPI.get('/four-day-outlook');\n      setForecasts(response.data.items[0].forecasts);\n    } catch (error) {\n      setError(\"Failed to fetch data\");\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const apiGet = async (area) => {\n    setLoading(true);\n    try {\n      const response = await mockAPI.get('/four-day-outlook');\n      const forecast = response.data.items[0].forecasts.find(\n        (item) => item.area === area\n      );\n      if (forecast) {\n        setAreaForecast(`The forecast in ${area} is ${forecast.forecast}`);\n      } else {\n        setAreaForecast(`There is no forecast for ${area}!`);\n      }\n    } catch (error) {\n      setAreaForecast(`Error fetching forecast for ${area}`);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <AreaForecast getForecast={apiGet} areaForecast={areaForecast} />\n      <button className={styles.button} onClick={apiGetAll}>\n        Load all weather forecasts\n      </button>\n      {loading && <p>Loading...</p>}\n      {error && <p>{error}</p>}\n      <Table list={forecasts} />\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}